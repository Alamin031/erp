import {
  ARInvoice,
  APBill,
  JournalEntry,
  BankAccount,
  ChartOfAccounts,
  BankTransaction,
} from "@/types/accounting";

export const MOCK_CHART_OF_ACCOUNTS: ChartOfAccounts[] = [
  { id: "1", code: "1000", name: "Cash", type: "Asset", balance: 50000, currency: "USD", active: true, createdAt: new Date().toISOString() },
  { id: "2", code: "1100", name: "Accounts Receivable", type: "Asset", balance: 125000, currency: "USD", active: true, createdAt: new Date().toISOString() },
  { id: "3", code: "1200", name: "Inventory", type: "Asset", balance: 80000, currency: "USD", active: true, createdAt: new Date().toISOString() },
  { id: "4", code: "2000", name: "Accounts Payable", type: "Liability", balance: 45000, currency: "USD", active: true, createdAt: new Date().toISOString() },
  { id: "5", code: "2100", name: "Short-term Loan", type: "Liability", balance: 25000, currency: "USD", active: true, createdAt: new Date().toISOString() },
  { id: "6", code: "3000", name: "Owner's Equity", type: "Equity", balance: 200000, currency: "USD", active: true, createdAt: new Date().toISOString() },
  { id: "7", code: "4000", name: "Room Revenue", type: "Revenue", balance: 250000, currency: "USD", active: true, createdAt: new Date().toISOString() },
  { id: "8", code: "4100", name: "Food & Beverage Revenue", type: "Revenue", balance: 85000, currency: "USD", active: true, createdAt: new Date().toISOString() },
  { id: "9", code: "5000", name: "Salaries Expense", type: "Expense", balance: 120000, currency: "USD", active: true, createdAt: new Date().toISOString() },
  { id: "10", code: "5100", name: "Utilities Expense", type: "Expense", balance: 25000, currency: "USD", active: true, createdAt: new Date().toISOString() },
  { id: "11", code: "5200", name: "Maintenance Expense", type: "Expense", balance: 35000, currency: "USD", active: true, createdAt: new Date().toISOString() },
  { id: "12", code: "5300", name: "Marketing Expense", type: "Expense", balance: 15000, currency: "USD", active: true, createdAt: new Date().toISOString() },
];

export const MOCK_AR_INVOICES: ARInvoice[] = [
  {
    id: "ar-001",
    invoiceNumber: "INV-2024-001",
    clientId: "client-001",
    clientName: "ABC Corporation",
    invoiceDate: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString(),
    dueDate: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),
    amount: 5000,
    paidAmount: 0,
    balance: 5000,
    status: "Overdue",
    terms: "Net 30",
    createdAt: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: "ar-002",
    invoiceNumber: "INV-2024-002",
    clientId: "client-002",
    clientName: "XYZ Industries",
    invoiceDate: new Date(Date.now() - 20 * 24 * 60 * 60 * 1000).toISOString(),
    dueDate: new Date(Date.now() + 10 * 24 * 60 * 60 * 1000).toISOString(),
    amount: 8500,
    paidAmount: 0,
    balance: 8500,
    status: "Pending",
    terms: "Net 30",
    createdAt: new Date(Date.now() - 20 * 24 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: "ar-003",
    invoiceNumber: "INV-2024-003",
    clientId: "client-003",
    clientName: "Global Enterprises",
    invoiceDate: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000).toISOString(),
    dueDate: new Date(Date.now() + 15 * 24 * 60 * 60 * 1000).toISOString(),
    amount: 12000,
    paidAmount: 12000,
    balance: 0,
    status: "Paid",
    terms: "Net 30",
    createdAt: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: "ar-004",
    invoiceNumber: "INV-2024-004",
    clientId: "client-004",
    clientName: "Tech Solutions Ltd",
    invoiceDate: new Date(Date.now() - 25 * 24 * 60 * 60 * 1000).toISOString(),
    dueDate: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(),
    amount: 6500,
    paidAmount: 2000,
    balance: 4500,
    status: "Overdue",
    terms: "Net 30",
    createdAt: new Date(Date.now() - 25 * 24 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: "ar-005",
    invoiceNumber: "INV-2024-005",
    clientId: "client-005",
    clientName: "Prime Logistics",
    invoiceDate: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000).toISOString(),
    dueDate: new Date(Date.now() + 20 * 24 * 60 * 60 * 1000).toISOString(),
    amount: 7200,
    paidAmount: 0,
    balance: 7200,
    status: "Pending",
    terms: "Net 30",
    createdAt: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date().toISOString(),
  },
];

export const MOCK_AP_BILLS: APBill[] = [
  {
    id: "ap-001",
    billNumber: "BILL-2024-001",
    vendorId: "vendor-001",
    vendorName: "Office Supplies Co.",
    billDate: new Date(Date.now() - 20 * 24 * 60 * 60 * 1000).toISOString(),
    dueDate: new Date(Date.now() + 10 * 24 * 60 * 60 * 1000).toISOString(),
    amount: 2500,
    paidAmount: 0,
    balance: 2500,
    status: "Pending",
    terms: "Net 30",
    createdAt: new Date(Date.now() - 20 * 24 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: "ap-002",
    billNumber: "BILL-2024-002",
    vendorId: "vendor-002",
    vendorName: "Utility Provider Inc.",
    billDate: new Date(Date.now() - 35 * 24 * 60 * 60 * 1000).toISOString(),
    dueDate: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),
    amount: 1800,
    paidAmount: 0,
    balance: 1800,
    status: "Overdue",
    terms: "Net 30",
    createdAt: new Date(Date.now() - 35 * 24 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: "ap-003",
    billNumber: "BILL-2024-003",
    vendorId: "vendor-003",
    vendorName: "Maintenance Services LLC",
    billDate: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000).toISOString(),
    dueDate: new Date(Date.now() + 15 * 24 * 60 * 60 * 1000).toISOString(),
    amount: 5000,
    paidAmount: 5000,
    balance: 0,
    status: "Paid",
    terms: "Net 30",
    createdAt: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: "ap-004",
    billNumber: "BILL-2024-004",
    vendorId: "vendor-004",
    vendorName: "Catering Services",
    billDate: new Date(Date.now() - 25 * 24 * 60 * 60 * 1000).toISOString(),
    dueDate: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),
    amount: 3200,
    paidAmount: 3200,
    balance: 0,
    status: "Paid",
    terms: "Net 30",
    createdAt: new Date(Date.now() - 25 * 24 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    id: "ap-005",
    billNumber: "BILL-2024-005",
    vendorId: "vendor-005",
    vendorName: "IT Equipment Supplier",
    billDate: new Date(Date.now() - 40 * 24 * 60 * 60 * 1000).toISOString(),
    dueDate: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000).toISOString(),
    amount: 4500,
    paidAmount: 2000,
    balance: 2500,
    status: "Overdue",
    terms: "Net 30",
    createdAt: new Date(Date.now() - 40 * 24 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date().toISOString(),
  },
];

export const MOCK_JOURNAL_ENTRIES: JournalEntry[] = [
  {
    id: "je-001",
    referenceNumber: "JE-001",
    date: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000).toISOString(),
    description: "Monthly salaries",
    lines: [
      { accountId: "9", accountCode: "5000", accountName: "Salaries Expense", type: "Debit", amount: 15000, description: "Staff salaries" },
      { accountId: "1", accountCode: "1000", accountName: "Cash", type: "Credit", amount: 15000, description: "Paid from bank" },
    ],
    isPosted: true,
    createdAt: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000).toISOString(),
    createdBy: "Admin",
    postedAt: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000).toISOString(),
    postedBy: "Accountant",
    updatedAt: new Date().toISOString(),
  },
  {
    id: "je-002",
    referenceNumber: "JE-002",
    date: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),
    description: "Utility bill payment",
    lines: [
      { accountId: "10", accountCode: "5100", accountName: "Utilities Expense", type: "Debit", amount: 2500, description: "Monthly utilities" },
      { accountId: "1", accountCode: "1000", accountName: "Cash", type: "Credit", amount: 2500, description: "Paid from bank" },
    ],
    isPosted: true,
    createdAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),
    createdBy: "Admin",
    postedAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),
    postedBy: "Accountant",
    updatedAt: new Date().toISOString(),
  },
  {
    id: "je-003",
    referenceNumber: "JE-003",
    date: new Date().toISOString(),
    description: "Revenue recognition",
    lines: [
      { accountId: "1", accountCode: "1000", accountName: "Cash", type: "Debit", amount: 12000, description: "Room revenue received" },
      { accountId: "7", accountCode: "4000", accountName: "Room Revenue", type: "Credit", amount: 12000, description: "Revenue for period" },
    ],
    isPosted: false,
    createdAt: new Date().toISOString(),
    createdBy: "Admin",
    updatedAt: new Date().toISOString(),
  },
];

export const MOCK_BANK_ACCOUNTS: BankAccount[] = [
  {
    id: "bank-001",
    accountNumber: "123456789",
    accountName: "Operating Account",
    bankName: "First National Bank",
    balance: 50000,
    currency: "USD",
    lastReconciled: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(),
    status: "Active",
    createdAt: new Date().toISOString(),
  },
  {
    id: "bank-002",
    accountNumber: "987654321",
    accountName: "Savings Account",
    bankName: "First National Bank",
    balance: 100000,
    currency: "USD",
    lastReconciled: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),
    status: "Active",
    createdAt: new Date().toISOString(),
  },
];

export const MOCK_BANK_TRANSACTIONS: BankTransaction[] = [
  {
    id: "btxn-001",
    bankAccountId: "bank-001",
    date: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),
    amount: 12000,
    description: "Invoice INV-2024-003 from Global Enterprises",
    transactionType: "Credit",
    status: "Reconciled",
    matchedPaymentId: "pay-001",
    createdAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),
  },
  {
    id: "btxn-002",
    bankAccountId: "bank-001",
    date: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),
    amount: 2500,
    description: "Payment to Office Supplies Co.",
    transactionType: "Debit",
    status: "Unmatched",
    createdAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),
  },
  {
    id: "btxn-003",
    bankAccountId: "bank-001",
    date: new Date().toISOString(),
    amount: 5000,
    description: "Deposit - Room revenue",
    transactionType: "Credit",
    status: "Unmatched",
    createdAt: new Date().toISOString(),
  },
];
